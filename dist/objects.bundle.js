!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return Math.floor(Math.random()*(t-e)+e)}function a(e,t){return e.x===t.x&&e.y===t.y}n.r(t),n.d(t,"getRandomFromRange",(function(){return i})),n.d(t,"hasColisions",(function(){return a})),n.d(t,"GameControl",(function(){return s}));var s=function(){function e(){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),null!=e._instance)return e._instance;this.gameMapElement=document.getElementById("gameMap"),this.scoreElement=document.getElementById("score"),this.resetButtonElement=document.getElementById("resetButton"),this.pauseButtonElement=document.getElementById("pauseButton"),this.startButtonElement=document.getElementById("startButton"),this.gameStateMessageElement=document.getElementById("gameStateMessage"),this.gameMapElement.width=e.mapWidthPX,this.gameMapElement.height=e.mapHeightPX;var t=e.getMapSize(),n=t.width,r=t.height;this.gameMap=Array.from({length:n},(function(){return Array(r).fill(0)})),this._score=0,this._state="begin",this.ctx=this.gameMapElement.getContext("2d"),this.drawBackground(),e._instance=this}var t,n,o;return t=e,o=[{key:"getMapSize",value:function(){var t=e.mapWidthPX,n=e.mapHeightPX,r=e.cellSize;return{width:Math.floor(t/r),height:Math.floor(n/r)}}}],(n=[{key:"getObject",value:function(e){var t=e.x,n=e.y;return this.gameMap[t][n]}},{key:"drawBackground",value:function(){this.ctx.fillStyle=e.backgroundColor,this.ctx.fillRect(e.lowestIndex,e.lowestIndex,e.mapWidthPX,e.mapHeightPX)}},{key:"drawCell",value:function(t,n,r){var o=t.x,i=t.y,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=this.ctx,l=this.gameMap,u=e.backgroundColor,c=e.cellSize,d=a?c-1:c;s.fillStyle=n||u,s.fillRect(o*c,i*c,d,d),l[o][i]=r}},{key:"clearCell",value:function(t,n){var r=t.x,o=t.y,i=e.cellSize,a=e.backgroundColor;this.ctx.fillStyle=a,this.ctx.fillRect(r*i,o*i,i,i),this.gameMap[r][o]=n||0}},{key:"getCoordinatesFromRange",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=e.getMapSize(),o=r.width,a=r.height,s=t.XMin,l=void 0===s?e.lowestIndex:s,u=t.XMax,c=void 0===u?o:u,d=t.YMin,h=void 0===d?e.lowestIndex:d,f=t.YMax,g=void 0===f?a:f,y=i(l,c),m=i(h,g);n&&0!==this.gameMap[y][m];)y=i(l,c),m=i(h,g);return{x:y,y:m}}},{key:"state",get:function(){return this._state},set:function(e){var t;switch(e){case"pause":t="Game was stoped";break;case"play":t="Play";break;case"begin":t="Start game";break;case"gameover":t="You are lose. Your score is ".concat(this.score);break;default:t="Undefined state",console.error("Undefined state: ",this.state)}this.gameStateMessageElement.innerText=t,this._state=e}},{key:"score",get:function(){return this._score},set:function(e){this.scoreElement.innerText=e,this._score=e}}])&&r(t.prototype,n),o&&r(t,o),e}();o(s,"_instance",null),o(s,"cellSize",20),o(s,"lowestIndex",0),o(s,"gameLoopRefreshRate",100),o(s,"backgroundColor","#eeeeee"),o(s,"mapWidthPX",500),o(s,"mapHeightPX",500)},function(e,t,n){"use strict";n.r(t),n.d(t,"Snake",(function(){return l})),n.d(t,"Mouse",(function(){return u}));var r=n(0);function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}var s=new r.GameControl,l=function(){function e(){o(this,e);var t=s.getCoordinatesFromRange({XMin:r.GameControl.lowestIndex+3}),n=[{x:t.x,y:t.y},{x:t.x-1,y:t.y},{x:t.x-2,y:t.y}];this.bodyCoordinates=n,this.direction="right",this.changeDirectionStack=[]}return a(e,[{key:"getBodyCells",value:function(){return this.bodyCoordinates.map((function(e){return s.getCell(e)}))}},{key:"clearSnake",value:function(){this.bodyCoordinates.forEach((function(e){s.clearCell(e)}))}},{key:"drawSnake",value:function(){this.bodyCoordinates.forEach((function(e,t){0===t?s.drawCell(e,"#8e0000",1):s.drawCell(e,"red",2)}))}},{key:"getNextHeadCoordinates",value:function(){var e=this.bodyCoordinates[0],t=r.GameControl.getMapSize(),n=t.width,o=t.height;switch(this.direction){case"right":return{x:e.x===n-1?r.GameControl.lowestIndex:e.x+1,y:e.y};case"left":return{x:0===e.x?n-1:e.x-1,y:e.y};case"up":return{x:e.x,y:0===e.y?o-1:e.y-1};case"down":return{x:e.x,y:e.y===o-1?r.GameControl.lowestIndex:e.y+1}}}},{key:"changeDirection",value:function(e){var t=this,n=e.code,r="";"ArrowLeft"===n&&"right"!==this.direction?r="left":"ArrowRight"===n&&"left"!==this.direction?r="right":"ArrowUp"===n&&"down"!==this.direction?r="up":"ArrowDown"===n&&"up"!==this.direction&&(r="down");var o=""!==r;if(o){if(!this.allowChangeDirection)return this.changeDirectionStack.push((function(){return t.changeDirection(e)})),!1;this.direction=r,this.allowChangeDirection=!1}return o}},{key:"move",value:function(e){var t=this.bodyCoordinates,n=this.getNextHeadCoordinates(),o=t[0],i=Object.assign({},t[t.length-1]);if(2===s.getObject(n))return!1;for(var a=Object(r.hasColisions)(o,e.coordinates),l=t.length-1;l>=1;l--)Object.assign(t[l],t[l-1]);return Object.assign(t[0],n),s.clearCell(o,2),a||s.clearCell(i),a&&(t.push(i),e.coordinates=u.spawnMouse(),s.score=s.score+1),!0}}]),e}(),u=function(){function e(){o(this,e);var t=e.spawnMouse();this.coordinates=t}return a(e,[{key:"clearMouse",value:function(){s.clearCell(this.coordinates)}}],[{key:"spawnMouse",value:function(){var e=s.getCoordinatesFromRange();return s.drawCell(e,"blue",3),e}}]),e}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,